{"version":3,"sources":["components/Section.js","components/FeedbackOptions.js","components/Notification.js","components/Statistics.js","App.js","index.js","App.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","type","className","s","button","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","addFeedback","prop","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","container","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wPASeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,M,gBCeUC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,OACbC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GALIA,SCJAM,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCkB3BC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,8BACE,2CACCC,KAEH,8BACE,uDACCC,EAFH,W,gBC+CSC,E,4MAnDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPK,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAOE,EAAUF,GAAQ,O,EAGvCG,mBAAqB,WACnB,IAAMR,EAAQ,EAAKG,MACnB,OAAOM,OAAOC,OAAOV,GAAOW,QAAO,SAACC,EAAKZ,GAAN,OAAgBY,EAAMZ,IAAO,I,EAGlEa,gCAAkC,WAChC,IAAQhB,EAAS,EAAKM,MAAdN,KACFG,EAAQ,EAAKQ,qBACnB,OAAgB,IAATX,EAAa,EAAIiB,KAAKC,MAAOlB,EAAOG,EAAS,M,4CAGtD,WACE,MAA+BgB,KAAKb,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBd,EAAUwB,OAAOQ,KAAKD,KAAKb,OAC3BH,EAAQgB,KAAKR,qBACnB,OACE,sBAAKlB,UAAWC,IAAE2B,UAAlB,UACE,cAAC,EAAD,CAASpC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASA,EACTC,gBAAiB8B,KAAKZ,gBAGf,IAAVJ,EACC,cAAC,EAAD,CAASlB,MAAM,aAAf,SACE,cAAC,EAAD,CACEe,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBe,KAAKH,sCAI7B,cAAC,EAAD,CAAclB,QAAQ,8B,GA7CdwB,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,sCCT1BC,EAAOC,QAAU,CAAC,UAAY,0B","file":"static/js/main.50622c92.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    {options.map(option => {\r\n      return (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          className={s.button}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      );\r\n    })}\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>\r\n        <span>Total: </span>\r\n        {total}\r\n      </p>\r\n      <p>\r\n        <span>Positive feedback: </span>\r\n        {positivePercentage}%\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  addFeedback = prop => {\n    this.setState(prevState => {\n      return { [prop]: prevState[prop] + 1 };\n    });\n  };\n  countTotalFeedback = () => {\n    const total = this.state;\n    return Object.values(total).reduce((acc, total) => acc + total, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return good === 0 ? 0 : Math.round((good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        {total !== 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given.\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3rrou\"};"],"sourceRoot":""}